PREFIX schema: <https://schema.org/>
PREFIX bf: <http://id.loc.gov/ontologies/bibframe/>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX haLicId: <https://data.hetarchief.be/id/license/>
PREFIX prov: <http://www.w3.org/ns/prov#>
PREFIX premis: <http://www.loc.gov/premis/rdf/v3/>
PREFIX haDes: <https://data.hetarchief.be/ns/description/> 
PREFIX rel: <http://id.loc.gov/vocabulary/preservation/relationshipSubType/> 
PREFIX graph: <https://data.hetarchief.be/graph/>
PREFIX haOrg: <https://data.hetarchief.be/ns/organization/>
PREFIX org: <http://www.w3.org/ns/org#>

PREFIX : <urn:kg-to-postgres:>

CONSTRUCT {
  ?id :tableName "graph.collection";
  :id ?id;
  :bibframe_preceeded_by ?bibframe_preceeded_by;
  :bibframe_succeeded_by ?bibframe_succeeded_by; 
  :bibframe_supplement_to ?bibframe_supplement_to;
  :collection_type ?collection_type_name;
  :schema_end_date ?schema_end_date;
  :schema_identifier ?schema_identifier ;
  :schema_is_part_of ?schema_is_part_of;
  :schema_location_created ?schema_location_created;
  :schema_name ?schema_name;
  :schema_publisher ?schema_publisher;
  :schema_season_number ?schema_season_number;
  :schema_start_date ?schema_start_date.

  ?il :tableName "graph.newspaper_schema_in_language";
  :collection_id ?id;
  :schema_in_language ?schema_in_language.

  ?an :tableName "graph.newspaper_schema_alternate_name";
  :collection_id ?id;
  :schema_alternate_name ?schema_alternate_name.

  ?ie_isp :tableName "graph.schema_is_part_of";
  :intellectual_entity_id ?ie;
  :type ?collection_type_name;
  :collection_id ?id.
}
WHERE {
  GRAPH graph:organization {
    ?schema_maintainer a haOrg:ContentPartner ;
    org:identifier ?maintainer_id
  }
  BIND(iri(concat("https://data.hetarchief.be/graph/metadata/", ?maintainer_id)) as ?ORGraph)
  GRAPH ?ORGraph {
    # Only get collections where the IEs are disseminated
   VALUES ?ie_type { haDes:NewspaperIssue haDes:NewspaperIssuePage }
   ?ie a ?ie_type;
      (schema:license|(rel:isp/schema:license)) ?schema_license;
      prov:wasDerivedFrom/schema:dateModified ?modified;
      schema:maintainer ?schema_maintainer;
      schema:isPartOf ?id.
    FILTER (?id != <https://anet.be/record/opacbnc/#N/A/N>)

    # Only include the right licenses
    FILTER (?schema_license IN ( 
        haLicId:VIAA-PUBLIEK-METADATA-LTD, 
        haLicId:VIAA-PUBLIEK-METADATA-ALL,
        haLicId:VIAA-PUBLIEK-CONTENT,
        haLicId:BEZOEKERTOOL-METADATA-ALL,
        haLicId:BEZOEKERTOOL-CONTENT ,
        haLicId:VIAA-INTRA_CP-METADATA-ALL ,
        haLicId:VIAA-INTRA_CP-CONTENT ,
        haLicId:Publiek-Domein,
        haLicId:COPYRIGHT-UNDETERMINED
    ))

    # for incremental 
    FILTER (!BOUND(?since) || ?modified >= ?since )
    
    {}
    UNION {
      ?ie schema:isPartOf ?id.
      FILTER (?id != <https://anet.be/record/opacbnc/#N/A/N>)
      
      BIND(IRI(CONCAT(str(?ie),"/",md5(str(?id)))) AS ?ie_isp)
      BIND ("newspaper" AS ?collection_type_name)
      GRAPH graph:anet {
        
        ?id a schema:Newspaper;
            schema:name ?schema_name;
            schema:identifier ?schema_identifier;
            schema:hasPart ?serie.
        {}
        UNION {
          ?id schema:inLanguage ?schema_in_language.
          BIND(IRI(CONCAT(str(?id),md5(?schema_in_language))) AS ?il)
        }
    
        UNION {
          ?id schema:alternateName ?schema_alternate_name.
          BIND(IRI(CONCAT(str(?id),md5(?schema_alternate_name))) AS ?an)
        }
    
        UNION {
          ?serie schema:locationCreated/schema:name ?schema_location_created.
          FILTER langMatches(lang(?schema_location_created), "nl")
        }
    
        UNION { ?serie schema:endDate ?schema_end_date. }
        UNION { ?serie schema:startDate ?schema_start_date. }
        UNION { 
          # TODO: can also result into entry in graph.thing table
          ?serie schema:publisher/schema:name ?schema_publisher. 
          FILTER langMatches(lang(?schema_publisher), "nl")
        }
    
        #UNION { ?id bf:preceededBy ?bibframe_preceeded_by }
    
        #UNION { ?id bf:succeededBy ?bibframe_succeeded_by }
    
        #UNION { ?id bf:supplementTo ?bibframe_supplement_to } 
      }
    }
  }
}